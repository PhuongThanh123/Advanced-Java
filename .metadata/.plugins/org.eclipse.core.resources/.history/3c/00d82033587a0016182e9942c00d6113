package exercise63Student;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream.GetField;
import java.text.DecimalFormat;
import java.util.ArrayList;


public class MainClassStudent {

	public static void main(String[] args) throws NumberFormatException,
			IOException {
		BufferedReader input = new BufferedReader(new InputStreamReader(
				System.in));
		ManagementStudent managementStudent = new ManagementStudent();
		Student student = new Student();
		ArrayList<Student> arrayListFile=new ArrayList<Student>();
		
		selectMenu(arrayListFile, student, input, managementStudent);
	}

	public static void selectMenu(ArrayList<Student> arrayListFile,Student student, BufferedReader input,
			ManagementStudent managementStudent) throws FileNotFoundException,
			IOException {
		boolean flag = true;
		while (flag) {
			System.out
					.println("Select Menu: \n1) View List \n2) Add New \n3) View Report \n4) Exit");
			int number = Integer.parseInt(input.readLine());
			switch (number) {
			case 1:
				readFile(arrayListFile, student);
				System.out.println(toString(arrayListFile));
				break;
			case 2:
				addNemStudent(student, input, managementStudent);
				writerFile(student);
				readFile(arrayListFile, student).toString();
				break;
			case 3:
				selectGade(student, input, managementStudent);
				break;
			default:
				if (selectYN())
					continue;
				else
					flag = false;
				break;
			}
		}

	}

	public static void selectGade(Student student, BufferedReader input,
			ManagementStudent managementStudent) throws NumberFormatException,
			IOException {
		boolean flag = true;
		while (flag) {
			System.out
					.println("Select Gade: \n1) Grade 10 \n2) Grade 11 \n3) Grade 12");
			int grade = Integer.parseInt(input.readLine());
			switch (grade) {
			case 1:
				managementStudent.listAvgGrade10();
				break;
			case 2:
				managementStudent.listAvgGrade11();
				break;
			case 3:
				managementStudent.listAvgGrade12();
				break;
			default:
				if (selectYN())
					continue;
				else
					flag = false;
				break;
			}
		}

	}

	public static void addNemStudent(Student student, BufferedReader input,
			ManagementStudent managementStudent) throws NumberFormatException,
			IOException {
		System.out.println("======Add new Student======");
		System.out.println("Enter name: ");
		String name = input.readLine();

		System.out.println("Enter grade: ");
		int grade = Integer.parseInt(input.readLine());

		System.out.println("Enter mark 1: ");
		double mark1 = Double.parseDouble(input.readLine());

		System.out.println("Enter mark 2: ");
		double mark2 = Double.parseDouble(input.readLine());

		student = new Student(name, grade, mark1, mark2);
		managementStudent.addNewStudent();
		System.out.println(managementStudent.toString());

	}

	public static ArrayList<Student> readFile(ArrayList<Student> arrayListFile,Student student) throws FileNotFoundException,
			IOException {
		double avg = 0;
		
		System.out.println("Name: \t\t Grade: Mark1 \tMark2 \tAvg \tAll Year");
		try (DataInputStream in = new DataInputStream(new BufferedInputStream(
				new FileInputStream("src/exercise63Student/tongketnamhoc.txt")))) {
			while (in.available() > 0) {
				student.setName(in.readUTF());
				student.setGrade(in.readInt());
				student.setMark1(in.readDouble());
				student.setMark2(in.readDouble());
				avg = (student.getMark1() + student.getMark2() * 2) / 3;
				DecimalFormat decimalFormat = new DecimalFormat("###.##");
				avg = Double.parseDouble(decimalFormat.format(avg));
				//System.out.println(student.toString());
				arrayListFile.add(student);
			}
		} catch (IOException ex) {
			System.out.println("Error: " + ex.getMessage());
		}
		return arrayListFile;

	}

	public static void writerFile(Student student) throws FileNotFoundException,
			IOException {
		try (DataOutputStream out = new DataOutputStream(
				new BufferedOutputStream(new FileOutputStream(
						"src/exercise61Diary/daily.txt", true)))) {
			out.writeUTF(student.getName());
			out.writeInt(student.getGrade());
			out.writeDouble(student.getMark1());
			out.writeDouble(student.getMark2());
			System.out.println("written is recorded success");
		}

	}

	public static boolean selectYN() throws IOException {
		BufferedReader input = new BufferedReader(new InputStreamReader(
				System.in));
		System.out.println("Do you want to continue");
		String st = input.readLine();
		boolean flag = false;
		while (!flag) {
			switch (st) {
			case "N":
			case "NO":
			case "no":
			case "n":
				return false;

			case "Y":
			case "YES":
			case "yes":
			case "y":
				return true;
			default:
				System.out.println("Choose again!");
				st = input.readLine();
				break;
			}

		}

		return false;
	}
	public static String toString(ArrayList<Student> arrayListFile) {
		String s="Name: \t Grade: \tMark1 \tMark2 \tAvg All Year";
		for(int i=0;i<arrayListFile.size();i++){
			s+=arrayListFile.get(i).getName()+"\t";
			s+=arrayListFile.get(i).getGrade()+"\t";
			s+=arrayListFile.get(i).getMark1()+"\t";
			s+=arrayListFile.get(i).getMark2()+"\n";
		}
		return s;
	}

}
