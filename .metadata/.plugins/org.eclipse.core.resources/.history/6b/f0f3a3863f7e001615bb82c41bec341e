package workWitXML;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.xml.sax.SAXException;


public class CDController {
	Database db = new Database();
	private List<CD> listCD = new ArrayList<CD>();
	private CD cd = new CD();
	private static List<CD> listReadFile = new ArrayList<CD>();

	public List<CD> getListCD() {
		return listCD;
	}

	public void setListCD(List<CD> listCD) {
		this.listCD = listCD;
	}

	public CDController(List<CD> listCD) {
		super();
		this.listCD = listCD;
	}

	public CDController() {
		super();
	}

	public List<CD> getAllCD() throws ClassNotFoundException, SQLException {
		listCD = new ArrayList<CD>();

		try (Connection conn = db.connect()) {
			Statement statement = conn.createStatement();
			String sql = "Select * from cd";

			ResultSet resultSet = statement.executeQuery(sql);
			while (resultSet.next()) {
				cd = new CD();
				cd.setId(resultSet.getInt("id"));
				cd.setName(resultSet.getString("name"));
				cd.setSinger(resultSet.getString("singer"));
				cd.setNumbersongs(resultSet.getInt("numbersongs"));
				cd.setPrice(resultSet.getDouble("price"));

				listCD.add(cd);
			}

		}
		return listCD;
	}

	public Document getDoc(String filePath)
			throws ParserConfigurationException, FileNotFoundException,
			SAXException, IOException {

		File xmlFile = new File(filePath);
		DocumentBuilderFactory docFactory = DocumentBuilderFactory
				.newInstance();
		DocumentBuilder docBuilder = docFactory.newDocumentBuilder();

		// root element
		Document doc = docBuilder.newDocument();
		Element rootElement;

		if (xmlFile.isFile()) {
			doc = docBuilder.parse(new FileInputStream(xmlFile));
			doc.getDocumentElement().normalize();

		} else {
			rootElement = doc.createElement("Cdnew");// create root
			doc.appendChild(rootElement);

		}

		return doc;
	}

	public void textTransfomer(CD cd, String filePath) throws FileNotFoundException, SAXException, IOException {

		
		try {
			//String filePath="src/exercise71ManagmentPhone/Contact.xml";
			File xmlFile=new File(filePath);
			Document doc =getDoc(filePath);
			Element rootElement=doc.getDocumentElement();
			// contact
			Element CD = doc.createElement("CD");
			rootElement.appendChild(CD);

			// name element
			Element name = doc.createElement("name");
			name.appendChild(doc.createTextNode(cd.getName()));
			CD.appendChild(name);

			// singer element
			Element singer = doc.createElement("singer");
			singer.appendChild(doc.createTextNode(cd.getSinger()));
			CD.appendChild(singer);
			
			// numbersong element
			Element numbersongs = doc.createElement("numbersongs");
			numbersongs.appendChild(doc.createTextNode(cd.getSinger()));
			CD.appendChild(numbersongs);
			
			// singer element
			Element price = doc.createElement("price");
			price.appendChild(doc.createTextNode(cd.getSinger()));
			CD.appendChild(price);

			// write the content into xml file
			TransformerFactory transformerFactory = TransformerFactory
					.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			transformer.setOutputProperty(OutputKeys.INDENT, "yes");
			transformer.setOutputProperty(OutputKeys.METHOD, "xml");
			transformer.setOutputProperty(OutputKeys.ENCODING, "UTF-8");
			transformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "4");
			DOMSource source = new DOMSource(doc);

			
			StreamResult result = new StreamResult(xmlFile);
			
			transformer.transform(source, result);
			System.out.println("This is success!");
			

		} catch (ParserConfigurationException | TransformerException|NullPointerException e) {
			System.out.println("Error: " + e.getMessage());
		}
	}

	@Override
	public String toString() {
		try {
			listCD = getAllCD();
		} catch (ClassNotFoundException | SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String s = "==================List====================\n";
		s += "Id\t\tName \t\t\t Singer \t NumberSongs \t\tprice\n";
		for (int i = 0; i < listCD.size(); i++) {
			s += listCD.get(i).toString();
		}
		return s;
	}

}
